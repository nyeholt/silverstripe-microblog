{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/src/components/molecules/MicroblogPostList.tsx","webpack:///./app/src/components/molecules/MicroblogForm.tsx","webpack:///./app/src/store/RemoteSourceDataManager.ts","webpack:///./app/src/index.tsx","webpack:///./app/src/type/Window.ts","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./app/src/components/App.tsx","webpack:///./app/src/components/organisms/Microblog.tsx","webpack:///./app/src/components/molecules/MicroBlogPost.tsx","webpack:///./app/assets/images/marcus.png","webpack:///./app/src/microblog/MicroPostDataSource.ts","webpack:///./app/src/store/Store.ts","webpack:///./app/src/microblog/reducer/MicroBlogReducer.ts","webpack:///./app/src/microblog/actions/MicroBlogActions.ts","webpack:///./app/src/type/Actions.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","React","MicroBlogPost_1","default","posts","expectedCount","loadChildren","loadMoreText","loadMore","sort","a","b","ID","createElement","className","map","post","href","onClick","e","preventDefault","MicroBlogActions_1","react_redux_1","react_dropzone_uploader_1","avatar","ConnectedMicroblogForm","connect","state","savingPost","microblog","dispatch","content","properties","to","createPost","update","updatePost","cancel","editPost","replyToPost","Component","[object Object]","props","super","this","newPost","extraProperties","target","Title","title","updateFunc","setState","id","getUploadParams","meta","url","handleChangeStatus","params","status","xhr","remove","upload","JSON","parse","responseText","currentContent","link","payload","MediaLink","handleSubmit","files","allFiles","forEach","f","OriginalContent","Content","showTitle","bgImage","background","placeholder","ParentID","buttonLabel","dropzoneProps","onChangeStatus","accept","multiple","minSizeBytes","maxSizeBytes","maxFiles","canCancel","canRemove","canRestart","styles","submitButtonContent","submitButtonDisabled","inputContent","Fragment","role","style","onSubmit","onChange","v","currentTarget","disabled","assign","RemoteSourceDataManager","CHECK_TIME","store","updateTimer","dataSources","doUpdate","now","Date","getTime","source","nextUpdate","lastUpdate","frequency","undefined","loadSource","setTimeout","callback","registerDataSource","removeDataSource","setStore","loadedStore","stopUpdates","clearTimeout","react_dom_1","App_1","blogs","document","getElementsByClassName","blogElem","item","propertiesJson","getAttribute","render","settings","moment","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","Error","code","keys","resolve","Microblog_1","Store_1","Member","setUser","Provider","MicroblogPostList_1","MicroblogForm_1","RemoteSourceDataManager_1","MicroPostDataSource_1","ConnectedMicroblog","loading","postsLoading","filterCount","loadPosts","filter","from","type","getFilter","items","join","getFilterString","actualFilter","orderedPosts","singleView","SingleView","matched","field","loadFrom","appliedFilter","hasMember","Target","ReactMarkdown","ConnectedMicroBlogPost","allPosts","editId","editingPostId","replyId","replyToPostId","user","ownProps","onEdit","onDelete","postId","deletePost","onReply","votePost","dir","children","child","expectedChildren","parseInt","NumChildren","score","Up","Down","isNaN","TargetInfo","Author","Created","escapeHtml","CanEdit","Link","confirm","wretch_1","Actions_1","filters","w","query","ActionType","START_POSTS_LOAD","json","loadPostsAction","setFilterCounts","remaining","redux_1","redux_thunk_1","MicroBlogReducer_1","combinedReducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","STORE_LOAD","MicroBlogData_default","users","reducers","action","SET_USERS","userList","userMap","SET_USER","EDIT_POST","UPDATING_POST","REPLY_TO_POST","DELETE_POST","postMap","FILTER_COUNT","total","LOAD_POSTS","setUsers","postedTo","public","getState","postsToLoad","parentPost","then","catch","error","console","postID","postClass","vote","postData","queryParams","fromNumber","err"],"mappings":"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AA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,gBAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,UAAA,GACAC,aAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UA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","file":"main.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([161,1,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as React from 'react';\nimport { MicroPost } from 'src/microblog/type/MicroPost';\nimport MicroBlogPost from './MicroBlogPost';\n\ninterface Props {\n    posts: MicroPost[]\n    expectedCount?: number\n    parentId?: string\n    loadMoreText?: string\n    loadChildren?: () => void\n}\n\nconst MicroblogPostList = ({ posts, expectedCount, loadChildren, loadMoreText }: Props): JSX.Element => {\n    const loadMore = expectedCount && expectedCount > 0 && posts.length < expectedCount;\n    posts.sort((a, b) => {\n        return (a.ID == b.ID ? 0 : (\n            a.ID < b.ID ? 1 : -1\n        ));\n    });\n    return (\n        <div className=\"MicroblogPostList\">\n            {posts.map((post) => {\n                return <MicroBlogPost post={post} key={post.ID} />\n            })}\n            {loadMore && <div className=\"MicroblogPostList__LoadMore\">\n                <a href=\"#\" onClick={(e: React.SyntheticEvent) => { e.preventDefault(); loadChildren ? loadChildren() : null; }}>↳ {loadMoreText || \"Show replies\"}...</a>\n            </div>}\n        </div>\n    );\n}\n\nexport default MicroblogPostList;\n\n","import * as React from 'react';\nimport { Dispatch, AnyAction } from 'redux';\nimport { createPost, updatePost, editPost, replyToPost } from 'src/microblog/actions/MicroBlogActions';\nimport { connect } from 'react-redux';\nimport { MicroPost } from 'src/microblog/type/MicroPost';\n\nimport Dropzone from 'react-dropzone-uploader'\n\n\nimport * as avatar from \"assets/images/marcus.png\";\nimport { GlobalStore } from 'src/type/GlobalStore';\n\ninterface Props {\n    target?: string | null\n    editPost?: MicroPost | null\n    extraProperties?: { [key: string]: string }    // extra parameters to be sent through\n    showTitle?: boolean\n}\n\ninterface DispatchProps {\n    create?: (content: string, properties: { [key: string]: any }, to?: { [key: string]: string }) => any\n    update?: (content: string, properties: { [key: string]: any }) => any\n    cancel?: () => any\n}\n\ninterface StateProps {\n    savingPost: boolean\n}\n\ninterface State {\n    id: string | null\n    title: string\n    content: string\n}\n\nclass MicroblogForm extends React.Component<Props & DispatchProps & StateProps, State>  {\n    constructor(props: Props & StateProps) {\n        super(props)\n\n        this.state = {\n            id: null,\n            title: \"\",\n            content: \"\"\n        }\n\n    }\n\n    newPost = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n        const { editPost, extraProperties, target } = this.props;\n        let properties: any = editPost ? editPost : (extraProperties ? extraProperties : {});\n        properties.Title = this.state.title;\n        properties.target = target;\n\n        if (this.state.content.length === 0) {\n            return;\n        }\n\n        let updateFunc = this.props.editPost ? this.props.update : this.props.create;\n        updateFunc ? updateFunc(this.state.content, properties) : null;\n\n        this.setState({\n            id: null,\n            content: \"\",\n            title: \"\"\n        });\n    }\n\n    static getDerivedStateFromProps(props: Props & DispatchProps, state: State) {\n        if (props.editPost && props.editPost.ID != state.id) {\n            return {\n                title: props.editPost.Title,\n                content: props.editPost.OriginalContent ? props.editPost.OriginalContent : props.editPost.Content,\n                id: props.editPost.ID,\n            }\n        }\n        if (!props.editPost && state.id) {\n            return {\n                id: null,\n                content: \"\",\n                title: \"\"\n            };\n        }\n        return null;\n    }\n\n    getUploadParams = (meta: any) => {\n        return {\n            url: '/api/v1/microblog/upload',\n        }\n    }\n\n    // called every time a file's `status` changes\n    handleChangeStatus = (params: any, status: any) => {\n        const { xhr } = params;\n        if (status === 'done') {\n            params.remove();\n            const upload = JSON.parse(xhr.responseText);\n            if (upload && upload.status == 200) {\n                let currentContent = this.state.content;\n                const link = upload.payload.MediaLink; // (upload.payload.Type == 'image' ? '!' : '') + '[' + upload.payload.Title + '](' + upload.payload.Link + ')';\n                this.setState({\n                    content: currentContent + (currentContent.length > 0 ? \"\\n\" : \"\") + link\n                })\n            }\n        }\n    }\n\n    // receives array of files that are done uploading when submit button is clicked\n    handleSubmit = (files: any, allFiles: any) => {\n        allFiles.forEach((f: any) => f.remove())\n    }\n\n    render(): JSX.Element {\n        const {\n            showTitle,\n            extraProperties,\n            savingPost\n        } = this.props;\n\n        const bgImage: React.CSSProperties = {\n            background: `transparent url(microblog/client/www/${avatar}) no-repeat`,\n        };\n\n        const placeholder = extraProperties && extraProperties.ParentID ? \"Reply...\" : \"Say something...\";\n\n        const buttonLabel = savingPost ? \"Saving...\" : (this.props.editPost ? \"Update\" : \"Post\");\n\n        const dropzoneProps = {\n            getUploadParams: this.getUploadParams,\n            onChangeStatus: this.handleChangeStatus,\n            // onSubmit: this.handleSubmit,\n            accept: \"image/*,audio/*,video/*\",\n            multiple: true,\n            minSizeBytes: 0,\n            maxSizeBytes: 10000000,\n            maxFiles: 10,\n            canCancel: true,\n            canRemove: true,\n            canRestart: false,\n            styles: {},\n            submitButtonContent: '',\n            submitButtonDisabled: true,\n            inputContent: '⭱ Upload',\n            // classNames: { inputLabelWithFiles: defaultClassNames.inputLabel },\n        };\n\n        return (\n            <React.Fragment>\n                <div className=\"MicroblogForm\">\n                    <div className=\"MicroblogForm__Profile\">\n                        <span role=\"img\" className=\"MicroblogForm__Avatar\" style={bgImage}>\n                        </span>\n                    </div>\n                    <div className=\"MicroblogForm__Fields\">\n                        <form onSubmit={(e: React.SyntheticEvent) => {\n                            e.preventDefault();\n                            return false;\n                        }}>\n\n                            {showTitle &&\n                                <div className=\"MicroblogForm__Field\">\n                                    <input name=\"title\" value={this.state.title} onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                                        const v = e.currentTarget.value;\n                                        this.setState({\n                                            title: v\n                                        })\n                                    }} />\n                                </div>\n                            }\n                            <div className=\"MicroblogForm__Field\">\n                                <textarea placeholder={placeholder} name=\"content\" value={this.state.content} onChange={(e: React.FormEvent<HTMLTextAreaElement>) => {\n                                    const v = e.currentTarget.value;\n                                    this.setState({\n                                        content: v\n                                    })\n                                }}></textarea>\n                            </div>\n                            <div className=\"MicroblogForm__Actions\">\n                                <button disabled={savingPost} className=\"MicroblogForm__Action__Default\" onClick={this.newPost}>\n                                    {buttonLabel}\n                                </button>\n                                <button onClick={() => {\n                                    this.setState({\n                                        id: null,\n                                        content: \"\",\n                                        title: \"\"\n                                    })\n                                    this.props.cancel ? this.props.cancel() : null;\n                                }}>Cancel</button>\n                                <div className=\"MicroblogForm__Files\">\n                                    <span className=\"sr-only\">Select or drag files to upload</span>\n                                    <Dropzone\n                                        {...dropzoneProps}\n                                    ></Dropzone>\n                                    {/* {...dropzoneProps} /> */}\n                                </div>\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state: GlobalStore): StateProps => {\n    return {\n        savingPost: state.microblog.savingPost\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>): DispatchProps => {\n    return {\n        create: (content: string, properties: { [key: string]: any }, to?: { [key: string]: string }) => dispatch(createPost(content, properties, to) as any),\n        update: (content: string, properties: { [key: string]: any }) => dispatch(updatePost(content, properties) as any),\n        cancel: () => { dispatch(editPost(null)); dispatch(replyToPost(null)); },\n    };\n}\n\nconst ConnectedMicroblogForm = connect<DispatchProps & StateProps>(mapStateToProps, mapDispatchToProps)(MicroblogForm);\nexport default ConnectedMicroblogForm;\n","import { Store } from \"redux\";\nimport RemoteDataSource from \"src/type/RemoteDataSource\";\n\n\nnamespace RemoteSourceDataManager {\n\n    const CHECK_TIME = 5;\n\n    let store : Store;\n\n    let updateTimer : any;\n\n    let dataSources: {[key: string]: RemoteDataSource} = {}\n\n    export function registerDataSource(source: RemoteDataSource) {\n        if (store) {\n            loadSource(source);\n        }\n\n        dataSources[source.id] = source;\n    }\n\n    export function removeDataSource(id: string) {\n        delete dataSources[id];\n    }\n\n    export function setStore(loadedStore: Store) {\n        store = loadedStore;\n        doUpdate();\n    }\n\n    export function stopUpdates() {\n        clearTimeout(updateTimer);\n    }\n\n    function doUpdate() {\n        const now = (new Date()).getTime();\n\n        for (let i in dataSources) {\n            const source = dataSources[i];\n            const nextUpdate = source.lastUpdate ? source.lastUpdate + (source.frequency*1000) : 0;\n\n            if (source.lastUpdate === undefined || nextUpdate < now) {\n                loadSource(source);\n            }\n        }\n\n        updateTimer = setTimeout(doUpdate, CHECK_TIME * 1000);\n    }\n\n    function loadSource(source: RemoteDataSource) {\n        source.lastUpdate = (new Date()).getTime();\n        if (source.callback) {\n            source.callback(store.dispatch);\n        }\n    }\n}\n\nexport default RemoteSourceDataManager;\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport './type/Window';\n\nimport App from './components/App';\n\n\n\nconst blogs: HTMLCollectionOf<HTMLElement> = document.getElementsByClassName('Microblog') as HTMLCollectionOf<HTMLElement>;\n\nfor (let i = 0, c = blogs.length; i < c; i++) {\n    let blogElem: HTMLElement = blogs.item(i) as HTMLElement;\n    let propertiesJson = blogElem.getAttribute('data-microblog-settings');\n    if (!propertiesJson || propertiesJson.length == 0) {\n        propertiesJson = \"{}\";\n    }\n\n    let properties = JSON.parse(propertiesJson);\n\n    render(\n        <App settings={properties} />\n        ,\n        blogElem\n    )\n}\n\n","\nimport * as moment from 'moment';\n\ndeclare global {\n    interface Window {\n        moment: typeof moment;\n    }\n}\nwindow.moment = moment;","var map = {\n\t\"./af\": 20,\n\t\"./af.js\": 20,\n\t\"./ar\": 21,\n\t\"./ar-dz\": 22,\n\t\"./ar-dz.js\": 22,\n\t\"./ar-kw\": 23,\n\t\"./ar-kw.js\": 23,\n\t\"./ar-ly\": 24,\n\t\"./ar-ly.js\": 24,\n\t\"./ar-ma\": 25,\n\t\"./ar-ma.js\": 25,\n\t\"./ar-sa\": 26,\n\t\"./ar-sa.js\": 26,\n\t\"./ar-tn\": 27,\n\t\"./ar-tn.js\": 27,\n\t\"./ar.js\": 21,\n\t\"./az\": 28,\n\t\"./az.js\": 28,\n\t\"./be\": 29,\n\t\"./be.js\": 29,\n\t\"./bg\": 30,\n\t\"./bg.js\": 30,\n\t\"./bm\": 31,\n\t\"./bm.js\": 31,\n\t\"./bn\": 32,\n\t\"./bn.js\": 32,\n\t\"./bo\": 33,\n\t\"./bo.js\": 33,\n\t\"./br\": 34,\n\t\"./br.js\": 34,\n\t\"./bs\": 35,\n\t\"./bs.js\": 35,\n\t\"./ca\": 36,\n\t\"./ca.js\": 36,\n\t\"./cs\": 37,\n\t\"./cs.js\": 37,\n\t\"./cv\": 38,\n\t\"./cv.js\": 38,\n\t\"./cy\": 39,\n\t\"./cy.js\": 39,\n\t\"./da\": 40,\n\t\"./da.js\": 40,\n\t\"./de\": 41,\n\t\"./de-at\": 42,\n\t\"./de-at.js\": 42,\n\t\"./de-ch\": 43,\n\t\"./de-ch.js\": 43,\n\t\"./de.js\": 41,\n\t\"./dv\": 44,\n\t\"./dv.js\": 44,\n\t\"./el\": 45,\n\t\"./el.js\": 45,\n\t\"./en-au\": 46,\n\t\"./en-au.js\": 46,\n\t\"./en-ca\": 47,\n\t\"./en-ca.js\": 47,\n\t\"./en-gb\": 48,\n\t\"./en-gb.js\": 48,\n\t\"./en-ie\": 49,\n\t\"./en-ie.js\": 49,\n\t\"./en-il\": 50,\n\t\"./en-il.js\": 50,\n\t\"./en-nz\": 51,\n\t\"./en-nz.js\": 51,\n\t\"./eo\": 52,\n\t\"./eo.js\": 52,\n\t\"./es\": 53,\n\t\"./es-do\": 54,\n\t\"./es-do.js\": 54,\n\t\"./es-us\": 55,\n\t\"./es-us.js\": 55,\n\t\"./es.js\": 53,\n\t\"./et\": 56,\n\t\"./et.js\": 56,\n\t\"./eu\": 57,\n\t\"./eu.js\": 57,\n\t\"./fa\": 58,\n\t\"./fa.js\": 58,\n\t\"./fi\": 59,\n\t\"./fi.js\": 59,\n\t\"./fo\": 60,\n\t\"./fo.js\": 60,\n\t\"./fr\": 61,\n\t\"./fr-ca\": 62,\n\t\"./fr-ca.js\": 62,\n\t\"./fr-ch\": 63,\n\t\"./fr-ch.js\": 63,\n\t\"./fr.js\": 61,\n\t\"./fy\": 64,\n\t\"./fy.js\": 64,\n\t\"./gd\": 65,\n\t\"./gd.js\": 65,\n\t\"./gl\": 66,\n\t\"./gl.js\": 66,\n\t\"./gom-latn\": 67,\n\t\"./gom-latn.js\": 67,\n\t\"./gu\": 68,\n\t\"./gu.js\": 68,\n\t\"./he\": 69,\n\t\"./he.js\": 69,\n\t\"./hi\": 70,\n\t\"./hi.js\": 70,\n\t\"./hr\": 71,\n\t\"./hr.js\": 71,\n\t\"./hu\": 72,\n\t\"./hu.js\": 72,\n\t\"./hy-am\": 73,\n\t\"./hy-am.js\": 73,\n\t\"./id\": 74,\n\t\"./id.js\": 74,\n\t\"./is\": 75,\n\t\"./is.js\": 75,\n\t\"./it\": 76,\n\t\"./it.js\": 76,\n\t\"./ja\": 77,\n\t\"./ja.js\": 77,\n\t\"./jv\": 78,\n\t\"./jv.js\": 78,\n\t\"./ka\": 79,\n\t\"./ka.js\": 79,\n\t\"./kk\": 80,\n\t\"./kk.js\": 80,\n\t\"./km\": 81,\n\t\"./km.js\": 81,\n\t\"./kn\": 82,\n\t\"./kn.js\": 82,\n\t\"./ko\": 83,\n\t\"./ko.js\": 83,\n\t\"./ky\": 84,\n\t\"./ky.js\": 84,\n\t\"./lb\": 85,\n\t\"./lb.js\": 85,\n\t\"./lo\": 86,\n\t\"./lo.js\": 86,\n\t\"./lt\": 87,\n\t\"./lt.js\": 87,\n\t\"./lv\": 88,\n\t\"./lv.js\": 88,\n\t\"./me\": 89,\n\t\"./me.js\": 89,\n\t\"./mi\": 90,\n\t\"./mi.js\": 90,\n\t\"./mk\": 91,\n\t\"./mk.js\": 91,\n\t\"./ml\": 92,\n\t\"./ml.js\": 92,\n\t\"./mn\": 93,\n\t\"./mn.js\": 93,\n\t\"./mr\": 94,\n\t\"./mr.js\": 94,\n\t\"./ms\": 95,\n\t\"./ms-my\": 96,\n\t\"./ms-my.js\": 96,\n\t\"./ms.js\": 95,\n\t\"./mt\": 97,\n\t\"./mt.js\": 97,\n\t\"./my\": 98,\n\t\"./my.js\": 98,\n\t\"./nb\": 99,\n\t\"./nb.js\": 99,\n\t\"./ne\": 100,\n\t\"./ne.js\": 100,\n\t\"./nl\": 101,\n\t\"./nl-be\": 102,\n\t\"./nl-be.js\": 102,\n\t\"./nl.js\": 101,\n\t\"./nn\": 103,\n\t\"./nn.js\": 103,\n\t\"./pa-in\": 104,\n\t\"./pa-in.js\": 104,\n\t\"./pl\": 105,\n\t\"./pl.js\": 105,\n\t\"./pt\": 106,\n\t\"./pt-br\": 107,\n\t\"./pt-br.js\": 107,\n\t\"./pt.js\": 106,\n\t\"./ro\": 108,\n\t\"./ro.js\": 108,\n\t\"./ru\": 109,\n\t\"./ru.js\": 109,\n\t\"./sd\": 110,\n\t\"./sd.js\": 110,\n\t\"./se\": 111,\n\t\"./se.js\": 111,\n\t\"./si\": 112,\n\t\"./si.js\": 112,\n\t\"./sk\": 113,\n\t\"./sk.js\": 113,\n\t\"./sl\": 114,\n\t\"./sl.js\": 114,\n\t\"./sq\": 115,\n\t\"./sq.js\": 115,\n\t\"./sr\": 116,\n\t\"./sr-cyrl\": 117,\n\t\"./sr-cyrl.js\": 117,\n\t\"./sr.js\": 116,\n\t\"./ss\": 118,\n\t\"./ss.js\": 118,\n\t\"./sv\": 119,\n\t\"./sv.js\": 119,\n\t\"./sw\": 120,\n\t\"./sw.js\": 120,\n\t\"./ta\": 121,\n\t\"./ta.js\": 121,\n\t\"./te\": 122,\n\t\"./te.js\": 122,\n\t\"./tet\": 123,\n\t\"./tet.js\": 123,\n\t\"./tg\": 124,\n\t\"./tg.js\": 124,\n\t\"./th\": 125,\n\t\"./th.js\": 125,\n\t\"./tl-ph\": 126,\n\t\"./tl-ph.js\": 126,\n\t\"./tlh\": 127,\n\t\"./tlh.js\": 127,\n\t\"./tr\": 128,\n\t\"./tr.js\": 128,\n\t\"./tzl\": 129,\n\t\"./tzl.js\": 129,\n\t\"./tzm\": 130,\n\t\"./tzm-latn\": 131,\n\t\"./tzm-latn.js\": 131,\n\t\"./tzm.js\": 130,\n\t\"./ug-cn\": 132,\n\t\"./ug-cn.js\": 132,\n\t\"./uk\": 133,\n\t\"./uk.js\": 133,\n\t\"./ur\": 134,\n\t\"./ur.js\": 134,\n\t\"./uz\": 135,\n\t\"./uz-latn\": 136,\n\t\"./uz-latn.js\": 136,\n\t\"./uz.js\": 135,\n\t\"./vi\": 137,\n\t\"./vi.js\": 137,\n\t\"./x-pseudo\": 138,\n\t\"./x-pseudo.js\": 138,\n\t\"./yo\": 139,\n\t\"./yo.js\": 139,\n\t\"./zh-cn\": 140,\n\t\"./zh-cn.js\": 140,\n\t\"./zh-hk\": 141,\n\t\"./zh-hk.js\": 141,\n\t\"./zh-tw\": 142,\n\t\"./zh-tw.js\": 142\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 171;","import * as React from 'react';\n\nimport Microblog from './organisms/Microblog';\nimport { Provider } from 'react-redux';\nimport store from 'src/store/Store';\nimport { setUser } from 'src/microblog/actions/MicroBlogActions';\n\ninterface Props {\n    classes?: any\n    settings?: any\n}\n\nclass App extends React.Component<Props> {\n\n    componentDidMount(): void {\n        // if we have user data\n        const settings = this.props.settings;\n        if (settings && settings.Member.ID) {\n            store.dispatch(setUser(settings.Member));\n        }\n    }\n\n    public render(): JSX.Element {\n        return (\n            <Provider store={store}>\n            <Microblog settings={this.props.settings} />\n            </Provider>\n        )\n    }\n};\n\nexport default App;","import * as React from 'react';\nimport { MicroPost } from 'src/microblog/type/MicroPost';\nimport MicroblogPostList from '../molecules/MicroblogPostList';\nimport MicroblogForm from '../molecules/MicroblogForm';\nimport { loadPosts } from 'src/microblog/actions/MicroBlogActions';\nimport { Dispatch, AnyAction } from 'redux';\nimport { GlobalStore } from 'src/type/GlobalStore';\nimport { MicroPostMap } from 'src/microblog/type/MicroPostMap';\nimport { connect } from 'react-redux';\nimport RemoteSourceDataManager from 'src/store/RemoteSourceDataManager';\nimport MicroPostDataSource from 'src/microblog/MicroPostDataSource';\n\n\n\ntype Props = OwnProps & StateProps & DispatchProps\ninterface OwnProps {\n    settings: MicroblogSettings\n}\n\ninterface StateProps {\n    posts?: MicroPostMap\n    filterCount?: { [filter: string]: number }\n    loading: boolean\n}\n\ninterface DispatchProps {\n    loadPosts?: (filter: string, from: number) => void\n}\n\ninterface MicroblogSettings {\n    apiKey: string\n    member: MicroblogMember\n    [key: string]: any\n}\n\ninterface MicroblogMember {\n    Name: string\n    ID: string\n}\n\ninterface State {\n}\n\nclass Microblog extends React.Component<Props, State>  {\n\n    constructor(props: Props) {\n        super(props)\n    }\n\n    getFilter(type = 'Filter'): { [key: string]: string } {\n\n        const { settings } = this.props;\n\n        let filter = settings[type];\n        if (!filter && settings['Filter']) {\n            filter = settings['Filter']\n        }\n        if (!filter) {\n            filter = { \"ParentID\": \"0\" }\n        }\n        if (settings['Target']) {\n            filter['Target'] = settings['Target'];\n        }\n        return filter;\n    }\n\n    getFilterString(type = 'FetchFilter'): string {\n        let filter = this.getFilter(type);\n        let items = [];\n        for (var key in filter) {\n            items.push(key + \"=\" + filter[key]);\n        }\n        return items.join(\";\");\n    }\n\n    componentDidMount(): void {\n        // we're not worrying about filters just yet...\n        RemoteSourceDataManager.registerDataSource(MicroPostDataSource(this.getFilterString()));\n    }\n\n    componentWillUnmount(): void {\n        RemoteSourceDataManager.removeDataSource(this.getFilterString());\n    }\n\n    loadChildren = () => {\n\n    }\n\n    render(): JSX.Element {\n        const {\n            posts,\n            settings,\n            filterCount,\n            loadPosts,\n            loading\n        } = this.props;\n\n        let actualFilter = this.getFilter();\n        let orderedPosts: MicroPost[] = [];\n\n        const singleView = settings.SingleView ? true : false;\n\n        if (posts) {\n            for (let i in posts) {\n                const post = posts[i];\n                if (actualFilter) {\n                    let matched = true;\n                    for (let field in actualFilter) {\n                        if (post[field] != actualFilter[field]) {\n                            matched = false;\n                            // we only need _one_ field to not match and we can then\n                            // break out\n                            break;\n                        }\n                    }\n                    if (matched) {\n                        orderedPosts.push(post);\n                    }\n                } else {\n                    orderedPosts.push(post);\n                }\n            }\n        }\n\n        let expectedCount = 0;\n        let loadFrom = orderedPosts.length;\n        const appliedFilter = this.getFilterString();\n        if (filterCount && filterCount[appliedFilter]) {\n            expectedCount = filterCount[appliedFilter];\n\n        }\n\n        const hasMember = settings.Member && settings.Member.ID;\n        const target = settings.Target ? settings.Target : null;\n\n        return (<div>\n            {hasMember > 0 && !singleView && <MicroblogForm target={target} />}\n            {loading && <div>Loading...</div>}\n            <MicroblogPostList \n                posts={orderedPosts} \n                loadChildren={() => {\n                    loadPosts ? loadPosts(appliedFilter, loadFrom) : null\n                }} \n                expectedCount={expectedCount} \n                loadMoreText=\"Load more\"\n            />\n        </div>)\n    }\n}\n\nconst mapStateToProps = (state: GlobalStore): StateProps => {\n    return {\n        posts: state.microblog.posts,\n        loading: state.microblog.postsLoading,\n        filterCount: state.microblog.filterCount,\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>): DispatchProps => {\n    return {\n        loadPosts: (filter: string, from: number) => dispatch(loadPosts(filter, from) as any),\n    };\n}\n\nconst ConnectedMicroblog = connect<StateProps & DispatchProps>(mapStateToProps, mapDispatchToProps)(Microblog);\nexport default ConnectedMicroblog;\n","import * as React from 'react';\nimport { MicroPost } from 'src/microblog/type/MicroPost';\nimport MicroblogForm from 'src/components/molecules/MicroblogForm';\n\nimport { connect } from 'react-redux';\nimport { GlobalStore } from 'src/type/GlobalStore';\nimport { Dispatch } from 'redux';\nimport { deletePost, editPost, replyToPost, loadPosts, votePost } from 'src/microblog/actions/MicroBlogActions';\nimport MicroblogPostList from './MicroblogPostList';\nimport { MicroblogMember } from 'src/microblog/type/MicroBlogMember';\n\nimport * as ReactMarkdown from 'react-markdown';\n\ninterface Props {\n    post: MicroPost\n    showTitle?: boolean\n}\n\ninterface StateProps {\n    editId?: string | null\n    replyId?: string | null\n    allPosts?: MicroPost[]\n    user?: MicroblogMember\n}\n\ninterface DispatchProps {\n    votePost?: (postId: string, dir: number) => any\n    onEdit?: (id: string) => void\n    onReply?: (id: string) => void\n    onDelete?: (postId: string) => void\n    loadChildren?: () => void\n}\n\nconst MicroBlogPost = (props: Props & StateProps & DispatchProps): JSX.Element => {\n    const {\n        post,\n        allPosts,\n        replyId,\n        editId,\n        showTitle,\n        onEdit,\n        onDelete,\n        onReply,\n        loadChildren,\n        votePost,\n        user\n    } = props;\n    const children = allPosts ? allPosts.filter(child => child.ParentID == post.ID) : [];\n    const expectedChildren = parseInt(post.NumChildren);\n\n    let score = parseInt(post.Up) - parseInt(post.Down);\n    if (isNaN(score)) {\n        score = 0;\n    }\n\n    const target = post.ParentID == \"0\" && post.TargetInfo ? JSON.parse(post.TargetInfo) : {};\n\n    // note that below we use \"escapeHtml=false\" because we've run the \n    // raw content through HTML Purifier\n\n    const confirmDelete = (e: React.SyntheticEvent) => {\n        if (confirm(\"Delete this post?\")) {\n            onDelete ? onDelete(post.ID) : null;\n        }\n    }\n\n    return (\n        <div className={post.ID == editId ? \"MicroBlogPost MicroBlogPost--edited\" : \"MicroBlogPost\"}>\n            <div className=\"MicroBlogPost__Profile\">\n                <span className=\"MicroBlogPost__Avatar\"></span>\n                <button className=\"MicroBlogPost__VoteArrow\" onClick={() => votePost ? votePost(post.ID, 1) : null}>⇧</button>\n                <span className=\"MicroBlogPost__PostScore\">{score}</span>\n                <button className=\"MicroBlogPost__VoteArrow\" onClick={() => votePost ? votePost(post.ID, -1) : null}>⇩</button>\n            </div>\n            <div className=\"MicroBlogPost__Post\">\n                <div className=\"MicroBlogPost__Author\">\n                    <strong className=\"MicroBlogPost__Author__Name\">{post.Author}</strong>\n                    <span className=\"MicroBlogPost__Author__Created\">{post.Created}</span>\n                </div>\n                {showTitle && <div className=\"MicroBlogPost__Title\">{post.Title}</div>}\n                <div className=\"MicroBlogPost__Content\"><ReactMarkdown escapeHtml={false} source={post.Content}></ReactMarkdown></div>\n\n                {post.CanEdit == \"1\" && editId === post.ID &&\n                    <div className=\"MicroBlogPost__EditPost\">\n                        <MicroblogForm editPost={post} />\n                    </div>\n                }\n\n                {replyId === post.ID &&\n                    <div className=\"MicroBlogPost__ReplyPost\">\n                        <MicroblogForm extraProperties={{ ParentID: replyId }} />\n                    </div>\n                }\n\n                {target.Title &&\n                    <div className=\"MicroBlogPost__Target\">\n                        <span>Comment on <a href={target.Link}>{target.Title}</a></span>\n                    </div>\n                }\n\n                <div className=\"MicroBlogPost__Actions\">\n                    <a href={'/microblog/show/' + post.ID}>Link</a>\n                    {user &&\n                        <button onClick={() => { onReply ? onReply(post.ID) : null; }}>Reply</button>\n                    }\n                    {post.CanEdit == \"1\" && <React.Fragment>\n                        <button onClick={() => { onEdit ? onEdit(post.ID) : null; }}>Edit</button>\n                        <button onClick={confirmDelete}>Delete</button>\n                    </React.Fragment>\n                    }\n                </div>\n\n                {\n                    expectedChildren > 0 && <MicroblogPostList loadChildren={loadChildren} posts={children} expectedCount={parseInt(post.NumChildren)} />\n                }\n            </div>\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state: GlobalStore): StateProps => {\n    let allPosts: MicroPost[] = [];\n    for (var id in state.microblog.posts) {\n        allPosts.push(state.microblog.posts[id]);\n    }\n    return {\n        allPosts: allPosts,\n        editId: state.microblog.editingPostId,\n        replyId: state.microblog.replyToPostId,\n        user: state.microblog.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch, ownProps: Props): DispatchProps => {\n    return {\n        onEdit: (id: string) => dispatch(editPost(id)),\n        onDelete: (postId: string) => dispatch(deletePost(postId) as any),\n        onReply: (id: string) => dispatch(replyToPost(id)),\n        loadChildren: () => dispatch(loadPosts(\"ParentID=\" + ownProps.post.ID) as any),\n        votePost: (postId: string, dir: number) => { return dispatch(votePost(postId, dir) as any) }\n    };\n}\n\nconst ConnectedMicroBlogPost = connect<StateProps>(mapStateToProps, mapDispatchToProps)(MicroBlogPost);\nexport default ConnectedMicroBlogPost;\n","module.exports = __webpack_public_path__ + \"images/marcus-ce0469b508acc49b560d5beeb5ec40d4.png\";","\nimport { Dispatch } from 'redux';\n\nimport wretch from 'wretch';\nimport { loadPostsAction, setFilterCounts } from './actions/MicroBlogActions';\nimport { ActionType } from 'src/type/Actions';\n\nexport default (filters: string) => {\n    return {\n        id: filters,\n        frequency: 23,\n        callback: function (dispatch: Dispatch) {\n            let w = wretch('/api/v1/microblog/posts');\n            if (filters) {\n                w = w.query({filter: filters});\n            }\n            dispatch({\n                type: ActionType.START_POSTS_LOAD,\n            });\n            \n            w.get().json((data: any) => {\n                if (data && data.status == 200 && data.payload.posts) {\n                    dispatch(loadPostsAction(data.payload.posts));\n                    dispatch(setFilterCounts(filters, data.payload.remaining))\n                }\n            });\n        }\n    }\n}\n","\nimport { createStore, combineReducers, Reducer, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\n// Add your various reducers in here. \n\nimport { GlobalStore } from 'src/type/GlobalStore';\nimport { ActionType } from 'src/type/Actions';\nimport microBlogReducer from 'src/microblog/reducer/MicroBlogReducer';\nimport RemoteSourceDataManager from './RemoteSourceDataManager';\n\nconst combinedReducers: Reducer<GlobalStore> = combineReducers<GlobalStore>({\n    microblog: microBlogReducer\n});\n\n// binds in capabilities for the redux extensions for \nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    combinedReducers,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);\n\nstore.dispatch({\n    type: ActionType.STORE_LOAD\n});\n\n// add store to window for debugging\nif (process.env.NODE_ENV !== 'production') {\n    (window as any).store = store;\n}\n\nRemoteSourceDataManager.setStore(store);\n\nexport default store;","import { ReducerMap } from \"src/type/ReducerMap\";\nimport { ActionType } from \"src/type/Actions\";\nimport { Action, AnyAction } from \"redux\";\nimport { MicroBlogData } from \"../type/MicroBlogData\";\nimport { MicroPost } from \"../type/MicroPost\";\nimport { MicroPostMap } from \"../type/MicroPostMap\";\nimport { MicroblogMember } from \"../type/MicroBlogMember\";\n\n\nconst MicroBlogData_default : MicroBlogData = {\n    posts: {},\n    users: {},\n    postsLoading: false,\n    savingPost: false,\n    filterCount: {},\n}\n\nconst reducers : ReducerMap<MicroBlogData> = {\n    [ActionType.STORE_LOAD]: (state: MicroBlogData, action: AnyAction) : MicroBlogData => {\n        return {\n            ...state\n        }\n    },\n    [ActionType.SET_USERS]: (state: MicroBlogData, action: AnyAction) : MicroBlogData => {\n        const userList = action.users;\n        const userMap = Object.assign({}, state.users);\n\n        if (userList && userList.length > 0) {\n            userList.forEach((user: MicroblogMember) => {\n                userMap[user.ID] = user;\n            })\n        }\n        if (userMap) {\n            return {\n                ...state,\n                users: userMap\n            }\n        }\n        return state;\n    },\n    [ActionType.SET_USER]: (state: MicroBlogData, action: AnyAction) : MicroBlogData => {\n        const user = action.user;\n        if (user) {\n            return {\n                ...state,\n                user: user\n            }\n        }\n        return state;\n    },\n    [ActionType.EDIT_POST]: (state: MicroBlogData, action: AnyAction) : MicroBlogData => {\n        return {\n            ...state,\n            editingPostId: action.postId\n        }\n    },\n    [ActionType.UPDATING_POST]: (state: MicroBlogData, action: AnyAction) : MicroBlogData => {\n        return {\n            ...state,\n            savingPost: action.value\n        }\n    },\n    [ActionType.REPLY_TO_POST]: (state: MicroBlogData, action: AnyAction) : MicroBlogData => {\n        return {\n            ...state,\n            replyToPostId: action.postId\n        }\n    },\n    [ActionType.DELETE_POST]: (state: MicroBlogData, action: AnyAction) : MicroBlogData => {\n        let postMap: MicroPostMap = {};\n        for (let i in state.posts) {\n            if (i == action.postId) {\n                continue;\n            }\n            postMap[i] = Object.assign({}, state.posts[i]);\n        }\n\n        return {\n            ...state,\n            posts: postMap\n        }\n    },\n    [ActionType.START_POSTS_LOAD]: (state: MicroBlogData, action: AnyAction) : MicroBlogData => {\n        return {\n            ...state,\n            postsLoading: true\n        }\n    },\n    [ActionType.FILTER_COUNT]: (state: MicroBlogData, action: AnyAction) : MicroBlogData => {\n        let filterCount = {\n            ...state.filterCount,\n            [action.filter]: action.total,\n        }\n        return {\n            ...state,\n            filterCount: filterCount\n        }\n    },\n    [ActionType.LOAD_POSTS]: (state: MicroBlogData, action: AnyAction) : MicroBlogData => {\n        let posts: MicroPost[] = action.payload;\n\n        let postMap: MicroPostMap = {};\n\n        for (let i in state.posts) {\n            postMap[i] = Object.assign({}, state.posts[i]);\n        }\n\n        posts.forEach((post) => {\n            postMap[post.ID] = post;\n        })\n\n        return {\n            ...state,\n            postsLoading: false,\n            posts: postMap\n        }\n    }\n}\n\nconst microBlogReducer = (state: MicroBlogData = MicroBlogData_default, action: Action) => {\n    if (reducers[action.type]) {\n        return reducers[action.type].call(this, state, action);\n    }\n    return state;\n}\n\nexport default microBlogReducer;","import { ThunkAction } from 'redux-thunk';\nimport { GlobalStore } from 'src/type/GlobalStore';\nimport { BaseAction, ActionType } from 'src/type/Actions';\nimport { Dispatch, AnyAction } from 'redux';\nimport wretch from 'wretch';\nimport { MicroPost } from '../type/MicroPost';\nimport { MicroblogMember } from '../type/MicroBlogMember';\n\n\nexport function setUser(user: MicroblogMember) : AnyAction {\n    return {\n        type: ActionType.SET_USER,\n        user: user\n    }\n}\n\nexport function createPost(content: string, properties: {[key: string]: any}, postedTo?: {[key: string]: string}): ThunkAction<void, GlobalStore, null, AnyAction> {\n    if (!postedTo) {\n        postedTo = {\n            public: \"1\"\n        }\n    }\n    const target = properties.target ? properties.target : null;\n\n    return (dispatch: Dispatch, getState: () => GlobalStore) => {\n        dispatch(savingPost(true));\n        wretch(\"/api/v1/microblog/createPost\").post({\n            content: content,\n            properties: properties,\n            to: postedTo,\n            target: target,\n        }).json((json) => {\n            dispatch(replyToPost(null));\n            let postsToLoad = [json.payload];\n            if (properties.ParentID) {\n                let parentPost = getState().microblog.posts[properties.ParentID];\n                if (parentPost) {\n                    parentPost = {\n                        ...parentPost,\n                        NumChildren: parentPost.NumChildren + 1\n                    }\n                    postsToLoad.push(parentPost);\n                }\n            }\n            return dispatch(loadPostsAction(postsToLoad));\n        }).then(() => {\n            dispatch(savingPost(false));\n        }).catch((error) => {\n            console.error(error);\n            dispatch(savingPost(false));\n        })\n    }\n}\n\nexport function updatePost(content: string, properties: {[key: string]: any}, postedTo?: {[key: string]: string}): ThunkAction<void, GlobalStore, null, AnyAction> {\n    return (dispatch: Dispatch) => {\n        dispatch(savingPost(true));\n        wretch(\"/api/v1/microblog/savePost\").post({\n            postID: properties.ID,\n            postClass: 'MicroPost',\n            data: {\n                Content: content,\n                Title: properties.Title\n            }\n        }).json((json) => {\n            dispatch(editPost(null));\n            return dispatch(loadPostsAction([json.payload]));\n        }).then(() => {\n            dispatch(savingPost(false));\n        }).catch((error) => {\n            console.error(error);\n            dispatch(savingPost(false));\n        })\n    }\n}\n\nexport function votePost(postId: string, vote: number): ThunkAction<void, GlobalStore, null, BaseAction> {\n    return (dispatch: Dispatch) => {\n        wretch('/api/v1/microblog/vote').post({\n            postClass: 'MicroPost',\n            postID: postId,\n            dir: vote\n        }).json((postData) => {\n            return dispatch(loadPostsAction([postData.payload]))\n        });\n    }\n}\n\nexport function loadPosts(filter: string | null = \"\", from: number = 0): ThunkAction<void, GlobalStore, null, BaseAction> {\n    let queryParams: any = {\n        filter: filter,\n    }\n    if (from > 0) {\n        queryParams.fromNumber = from\n    }\n    return (dispatch: Dispatch) => {\n        wretch(\"/api/v1/microblog/posts\")\n            .query(queryParams)\n            .get()\n            .json(json => {\n                if (json.payload && json.payload.posts) {\n                    dispatch(setFilterCounts(filter || '', json.payload.remaining))\n                    dispatch(loadPostsAction(json.payload.posts));\n                    dispatch(setUsers(json.payload.users));\n                }\n            });\n    }\n}\n\nexport function deletePost(postId: string): ThunkAction<void, GlobalStore, null, BaseAction> {\n    return (dispatch: Dispatch, getState: () => GlobalStore) => {\n        wretch('/api/v1/microblog/deletePost')\n            .post({\n                postId: postId\n            }).json(json => {\n                if (json && json.status && json.status == 200) {\n                    dispatch({\n                        type: ActionType.DELETE_POST,\n                        postId: postId\n                    });\n                    dispatch\n                }\n            }).catch((err) => {\n                console.error(\"Failed deleting post\", err);\n            })\n    }\n}\n\nexport function savingPost(v: boolean) {\n    return {\n        type: ActionType.UPDATING_POST,\n        value: v\n    }\n}\n\nexport function setUsers(users: MicroblogMember[]) {\n    return {\n        type: ActionType.SET_USERS,\n        users: users\n    }\n}\n\nexport function replyToPost(postId: string | null) {\n    return {\n        type: ActionType.REPLY_TO_POST,\n        postId: postId,\n    };\n}\n\nexport function editPost(postId: string | null) {\n    return {\n        type: ActionType.EDIT_POST,\n        postId: postId,\n    };\n}\n\nexport function setFilterCounts(filter: string, total: number) {\n    return {\n        type: ActionType.FILTER_COUNT,\n        filter: filter,\n        total: total,\n    }\n}\n\nexport function loadPostsAction(posts: MicroPost[]) {\n    return {\n        type: ActionType.LOAD_POSTS,\n        payload: posts,\n    }\n}","import { Action } from \"redux\";\n\nexport const ActionType = {\n    STORE_LOAD: \"STORE_LOAD\",\n\n    SET_USER: \"SET_USER\",\n    SET_USERS: \"SET_USERS\",\n    // from example module, please delete!\n    START_POSTS_LOAD: \"START_POSTS_LOAD\",\n    LOAD_POSTS: \"LOAD_POSTS\",\n\n    UPDATING_POST: \"UPDATING_POST\",\n\n    REPLY_TO_POST: \"REPLY_TO_POST\",\n    EDIT_POST: \"EDIT_POST\",\n    DELETE_POST: \"DELETE_POST\",\n\n    FILTER_COUNT: \"FILTER_COUNT\",\n}\n\nexport interface BaseAction extends Action {\n    payload: any\n}"],"sourceRoot":""}